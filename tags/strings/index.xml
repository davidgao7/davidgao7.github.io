<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strings on davidgao7 blog</title>
    <link>http://localhost:1313/tags/strings/</link>
    <description>Recent content in Strings on davidgao7 blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Mar 2025 22:47:23 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/strings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Valid Word Abbreviation</title>
      <link>http://localhost:1313/posts/vertical-order/</link>
      <pubDate>Wed, 12 Mar 2025 22:47:23 -0400</pubDate>
      <guid>http://localhost:1313/posts/vertical-order/</guid>
      <description>&lt;h3 id=&#34;problem-statement&#34;&gt;Problem Statement&lt;/h3&gt;&#xA;&lt;p&gt;A string can be abbreviated by replacing any number of non-adjacent, non-empty substrings with their lengths. The lengths should not have leading zeros.&lt;/p&gt;&#xA;&lt;p&gt;For example, a string such as &lt;code&gt;&amp;quot;substitution&amp;quot;&lt;/code&gt; could be abbreviated as (but not limited to):&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;s10n&amp;quot;&lt;/code&gt; (&lt;code&gt;&amp;quot;s ubstitutio n&amp;quot;&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;sub4u4&amp;quot;&lt;/code&gt; (&lt;code&gt;&amp;quot;sub stit u tion&amp;quot;&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;12&amp;quot;&lt;/code&gt; (&lt;code&gt;&amp;quot;substitution&amp;quot;&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;su3i1u2on&amp;quot;&lt;/code&gt; (&lt;code&gt;&amp;quot;su bst i t u ti on&amp;quot;&lt;/code&gt;)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;substitution&amp;quot;&lt;/code&gt; (no substrings replaced)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The following are &lt;strong&gt;not valid&lt;/strong&gt; abbreviations:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;s55n&amp;quot;&lt;/code&gt; (&lt;code&gt;&amp;quot;s ubsti tutio n&amp;quot;&lt;/code&gt;, the replaced substrings are adjacent)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;s010n&amp;quot;&lt;/code&gt; (has leading zeros)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;&amp;quot;s0ubstitution&amp;quot;&lt;/code&gt; (replaces an empty substring)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;example-1&#34;&gt;Example 1:&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Input: word &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;internationalization&amp;#34;&lt;/span&gt;, abbr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;i12iz4n&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output: true&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-2&#34;&gt;Example 2:&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Input: word &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;apple&amp;#34;&lt;/span&gt;, abbr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a2e&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Output: false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;constraints&#34;&gt;Constraints:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;1 &amp;lt;= word.length &amp;lt;= 20&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;1 &amp;lt;= abbr.length &amp;lt;= 10&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;abbr&lt;/code&gt; consists of lowercase English letters and digits.&lt;/li&gt;&#xA;&lt;li&gt;No leading zeros in numbers.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;approach&#34;&gt;&lt;strong&gt;Approach&lt;/strong&gt;&lt;/h3&gt;&#xA;&lt;p&gt;This is a &lt;strong&gt;two-pointer problem&lt;/strong&gt; where we traverse both &lt;code&gt;word&lt;/code&gt; and &lt;code&gt;abbr&lt;/code&gt; simultaneously. The key challenges:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
